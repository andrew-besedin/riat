// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.5.0
//   protoc               v3.20.3
// source: proto/bookings.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "bookings";

export interface CreateBookingRequest {
  accountId: number;
  sessionId: number;
  seat: string;
}

export interface CreateBookingResponse {
  success: boolean;
}

export const BOOKINGS_PACKAGE_NAME = "bookings";

export interface BookingsServiceClient {
  createBooking(request: CreateBookingRequest): Observable<CreateBookingResponse>;
}

export interface BookingsServiceController {
  createBooking(
    request: CreateBookingRequest,
  ): Promise<CreateBookingResponse> | Observable<CreateBookingResponse> | CreateBookingResponse;
}

export function BookingsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createBooking"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("BookingsService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("BookingsService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const BOOKINGS_SERVICE_NAME = "BookingsService";
