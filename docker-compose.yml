x-api-gateway-base: &api-gateway-base
  build:
    context: .
    dockerfile: ./docker/production/api-gateway.Dockerfile
  ports:
    - 3000:3000


x-users-service-base: &users-service-base
  build:
    context: .
    dockerfile: ./docker/production/users.Dockerfile
  expose:
    - 50051:50051

x-sessions-service-base: &sessions-service-base
  build:
    context: .
    dockerfile: ./docker/production/sessions.Dockerfile
  expose:
    - 50051:50051

x-booking-service-base: &booking-service-base
  build:
    context: .
    dockerfile: ./docker/production/bookings.Dockerfile
  expose:
    - 50051:50051

x-bookings-consumer-base: &bookings-consumer-base
  build:
    context: .
    dockerfile: ./docker/production/bookings-consumer.Dockerfile

x-rabbitmq-riat-base: &rabbitmq-riat-base
  image: rabbitmq:3-management
  ports:
    - 5672:5672
    - 15672:15672
  volumes:
    - rabbitmq_data:/var/lib/rabbitmq

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-example}
    expose:
      - 5432
    ports:
      - 5433:5432
    volumes:
      - pgdata-riat:/var/lib/postgresql/data 
    profiles:
      - dev
      - prod

  rabbitmq-riat-dev:
    <<: *rabbitmq-riat-base
    profiles:
      - dev
    env_file:
      - .development.env
 
  api-gateway-dev:
    <<: *api-gateway-base
    profiles:
      - dev
    command: npm run start:dev
    develop:
      watch:
        - action: sync
          path: ./apps/riat
          target: /app/apps/riat
    environment:
      - NODE_ENV=development
  
  users-service-dev:
    <<: *users-service-base
    profiles:
      - dev
    command: npm run start:dev users
    develop:
      watch:
        - action: sync
          path: ./apps/users
          target: /app/apps/users
    environment:
      - NODE_ENV=development

  sessions-service-dev:
    <<: *sessions-service-base
    profiles:
      - dev
    command: npm run start:dev sessions
    develop:
      watch:
        - action: sync
          path: ./apps/sessions
          target: /app/apps/sessions
    environment:
      - NODE_ENV=development


  bookings-service-dev:
    <<: *booking-service-base
    profiles:
      - dev
    command: npm run start:dev bookings
    develop:
      watch:
        - action: sync
          path: ./apps/bookings
          target: /app/apps/bookings
    environment:
      - NODE_ENV=development


  bookings-consumer-dev:
    <<: *bookings-consumer-base
    profiles:
      - dev
    command: npm run start:dev bookings-consumer
    develop:
      watch:
        - action: sync
          path: ./apps/bookings-consumer
          target: /app/apps/bookings-consumer
    environment:
      - NODE_ENV=development






  api-gateway-prod:
    <<: *api-gateway-base
    profiles:
      - prod
    environment:
      - NODE_ENV=production
  
  users-service-prod:
    <<: *users-service-base
    profiles:
      - prod
    environment:
      - NODE_ENV=production

  sessions-service-prod:
    <<: *sessions-service-base
    profiles:
      - prod
    environment:
      - NODE_ENV=production

  bookings-service-prod:
    <<: *booking-service-base
    profiles:
      - prod
    environment:
      - NODE_ENV=production

  rabbitmq-riat-prod:
    <<: *rabbitmq-riat-base
    profiles:
      - prod
    env_file:
      - .env

  bookings-consumer-prod:
    <<: *bookings-consumer-base
    profiles:
      - prod
    environment:
      - NODE_ENV=production

volumes:
  pgdata-riat:
  rabbitmq_data: